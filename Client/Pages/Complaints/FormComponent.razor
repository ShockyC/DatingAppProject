@inject HttpClient _client

<EditForm Model="@complaint" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Title of Complaint: </label>
            <div>
                <InputText @bind-Value="complaint.ComplaintTitle" class="form-control" />
                <ValidationMessage For="@(() => complaint.ComplaintTitle)" />
            </div>
        </div>
        <div class="form-group">
            <label>Type of Complaint: </label>
            <div>
                <InputText @bind-Value="complaint.ComplaintType" class="form-control" />
                <ValidationMessage For="@(() => complaint.ComplaintType)" />
            </div>
        </div>
        <div class="form-group">
            <label>Description: </label>
            <div>
                <InputText @bind-Value="complaint.ComplaintDescription" class="form-control" />
                <ValidationMessage For="@(() => complaint.ComplaintDescription)" />
            </div>
        </div>
        <div class="form-group">
            <label>Customer Account: </label>
            <div>
                <InputSelect @bind-Value="complaint.CustomerId" class="form-control">
                    <option value="">--Select Customer--</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.Id">
                                @customer.Name - @customer.Contact
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => complaint.CustomerId)" />
            </div>
        </div>
        <div class="form-group">
            <label>Staff Account: </label>
            <div>
                <InputSelect @bind-Value="complaint.StaffId" class="form-control">
                    <option value="">--Select Staff--</option>
                    @if (Staffs != null)
                    {
                        foreach (var staff in Staffs)
                        {
                            <option value="@staff.Id">
                                @staff.Name - @staff.Contact
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => complaint.StaffId)" />
            </div>
        </div>
    </fieldset>
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="complaints" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Complaint complaint { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Customer> Customers;
    private IList<Staff> Staffs;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>("api/customers");
        Staffs = await _client.GetFromJsonAsync<List<Staff>>("api/staffs");
    }
}