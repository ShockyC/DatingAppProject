@inject HttpClient _client
<EditForm Model="@message" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Message Title: </label>
            <div>
                <InputText @bind-Value="message.MessageTitle" class="form-control" />
                <ValidationMessage For="@(() => message.MessageTitle)" />
            </div>
        </div>
        <div class="form-group">
            <label>Message Content: </label>
            <div>
                <InputText @bind-Value="message.MessageContent " class="form-control" />
                <ValidationMessage For="@(() => message.MessageContent )" />
            </div>
        </div>
        <div class="form-group">
            <label>Message Date </label>
            <div>
                <InputDate @bind-Value="message.MessageDate" class="form-control" />
                <ValidationMessage For="@(() => message.MessageDate)" />
            </div>
        </div>
        <div class="form-group">
            <label>Sender </label>
            <div>
                <InputSelect @bind-Value="message. SenderId" class="form-control">
                    <option value="">--Select Sender--</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.Id">
                                @customer.Name - @customer.Contact
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => message. SenderId)" />
            </div>
        </div>
        <div class="form-group">
            <label>Receiver </label>
            <div>
                <InputSelect @bind-Value="message.ReceiverId" class="form-control">
                    <option value="">--Select Receiver--</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.Id">
                                @customer.Name - @customer.Contact
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => message.ReceiverId)" />
            </div>
        </div>
    </fieldset>
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="messages" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Message message { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Customer> Customers;


    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>("api/customers");

    }

}
